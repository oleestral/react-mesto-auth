{"version":3,"sources":["images/logo.svg","components/Header.js","images/pencil.svg","images/CloseIcon.svg","images/image.png","utils/Api.js","utils/constants.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","address","token","this","_address","_token","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","_getResponseData","info","body","JSON","stringify","name","about","caption","link","id","avatar","Card","props","card","_id","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","getCards","useEffect","all","getUserInfo","getInitialCards","item","userData","cardsData","catch","err","console","log","pencil","isEditAvatarPopupOpen","isEditProfilePopupOpen","isAddPlacePopupOpen","closeIcon","map","Footer","ImagePopup","isOpen","onClose","PopupWithForm","title","children","buttonText","App","setIsAddPlacePopupOpen","setIsEditAvatarPopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","imageOpened","setImageOpened","closeAllPopups","placeholder","autoComplete","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10d197ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n    return (\n        <header className = \"header\">\n            <img className = \"header__logo\" src= {logo} alt = \"Место Россия\"/>\n        </header>\n    )\n    \n}\nexport default Header;","export default __webpack_public_path__ + \"static/media/pencil.88838230.svg\";","export default __webpack_public_path__ + \"static/media/CloseIcon.118074ba.svg\";","export default __webpack_public_path__ + \"static/media/image.33053c0b.png\";","import { ApiData } from \"./constants\";\n\nclass Api {\n    constructor({address , token}) {\n        this._address = address;\n        this._token = token;\n    }\n    _getResponseData(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка: ${res.status}`); \n        }\n        return res.json();\n      }\n    //user information\n    getUserInfo() {\n        return fetch(`${this._address}/users/me`, {\n            method: 'GET',\n            headers: {\n                authorization: this._token,\n                'Content-type': 'application/json'\n            }\n        })\n        .then(this._getResponseData)\n    }\n    //edit user profile\n    editUserProfile(info) {\n        return fetch(`${this._address}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: info.name,\n                about: info.caption\n            })\n        })\n        .then(this._getResponseData)\n    }\n    //get Initial Cards\n    getInitialCards() {\n        return fetch(`${this._address}/cards`, {\n            method: 'GET',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(this._getResponseData)\n    }\n    //add user's cards\n    addUserCards(info) {\n        return fetch(`${this._address}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: info.name,\n                link: info.link\n            })\n        })\n        .then(this._getResponseData)\n    }\n    //remove user's card\n    removeUserCards(id) {\n        return fetch(`${this._address}/cards/${id}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token\n            }\n        })\n        .then(this._getResponseData)\n    }\n    //like post\n    like(id) {\n        return fetch(`${this._address}/cards/likes/${id}`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._token\n            }\n        })\n        .then(this._getResponseData)\n    }\n    //remove like\n    removeLike(id) {\n        return fetch(`${this._address}/cards/likes/${id}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token\n            }\n        })\n        .then(this._getResponseData)\n    }\n    //update user avatar\n    updateUserAvatar(info) {\n        return fetch(`${this._address}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                avatar: info.avatar\n            })\n        })\n        .then(this._getResponseData)\n    }\n}\nexport const api = new Api(ApiData);","\nexport const ApiData = {\n  address: 'https://mesto.nomoreparties.co/v1/cohort-22',\n  token: '42bb299b-ecdd-434e-b139-b5601cfc74ef'\n}","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  }  \n    return (\n        <article className = \"element\" id = {props.card._id}>\n          <img id = \"element-image\" className = \"element__image\" src ={props.card.link} alt = {props.name} onClick={handleClick}/>\n          <div className = \"element__footer\">\n            <h2 className = \"element__paragraph\" >{props.card.name}</h2>\n            <button type = \"button\" className = \"element__like-button\"></button>\n          </div>\n          <p className = \"element__like-counter\">{props.card.likes.length}</p>\n          <button type = \"button\" className = \"element__delete-button\"></button>\n        </article>\n    )\n}\nexport default Card;","import React from 'react';\nimport pencil from '../images/pencil.svg';\nimport closeIcon from '../images/CloseIcon.svg';\nimport avatar from '../images/image.png';\nimport { api } from '../utils/Api';\nimport Card from './Card';\n\nfunction Main(props) {\n\n    const [userName, setUserName] = React.useState('Жак-Ив Кусто');\n    const [userDescription, setUserDescription] = React.useState('Исследователь океанов');\n    const [userAvatar, setUserAvatar] = React.useState(avatar);\n      function getUserData(item) {\n        setUserName(item.name);\n        setUserDescription(item.about);\n        setUserAvatar(item.avatar);\n      }\n\n    const [cards, getCards] = React.useState([]);\n\n    React.useEffect(()=> {\n      Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, cardsData]) => {\n        getUserData(userData);\n        getCards(cardsData);\n      }\n      )\n      .catch((err) => {\n        console.log(err);\n      })\n    },[])\n    \n    return (\n        <main className = \"content\">\n          <section className = \"profile\">\n            <img className = 'profile__avatar' src={userAvatar} alt=\"аватар\"/>\n            <img className = \"profile__avatar-edit\" src = {pencil} alt = \"Редактировать профиль\" onClick={props.isEditAvatarPopupOpen}/>\n            <div className = \"profile__info\">\n              <div className = \"profile__info-items\">\n                <h1 className = \"profile__info-name\">{userName}</h1>\n                <p className = \"profile__info-self-description\">{userDescription}</p>\n              </div>\n              <button type = \"button\" className = \"profile__info-edit-button button\" onClick={props.isEditProfilePopupOpen}></button>\n            </div>\n            <button type = \"button\" className = \"profile__info-add-button button\" onClick={props.isAddPlacePopupOpen}><img className = \"profile__info-add-button-image\" src = {closeIcon} alt = \"Кнопка добавить\"/></button>\n          </section>\n          <section className = \"elements\">\n            {\n              cards.map((item) => {\n                return <Card key={item._id} card={item} onCardClick={props.onCardClick}/>\n              })\n            }\n          </section>\n        </main>\n    )\n}\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n    <footer className = \"footer\">\n        <p className = \"footer__paragraph\">&copy;2021 Mesto Russia</p>\n    </footer>\n    )\n}\nexport default Footer;","import React from 'react';\n\n\nfunction ImagePopup(props) {\n    return (\n        <div className = {`popup popup-open popup-close ${props.isOpen ? \"popup_opened\" : \"\"}`}>\n            <div className = \"popup-open__container\">\n                <button type = \"button\" className = \"popup__close-button popup-open__close-button\" onClick={props.onClose}></button>\n                <img className = \"popup-open__image\" src = {props.card.link} alt = {props.card.name} id = \"opened-image\"/>\n                <h3 className = \"popup-open__title\" id = \"popup-open-title\">{props.card.name}</h3>\n            </div>\n        </div>\n    )\n}\nexport default ImagePopup;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <div className = {`popup popup-close popup-${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}>\n          <div className = \"popup__container\">\n            <button type = \"button\" className = \"popup__close-button\" onClick={props.onClose}></button>\n            <h2 className = \"popup__edit-profile\">{props.title}</h2>\n            <form  name = {`input-container form-${props.name}`} className = \"popup__form popup__input-container \">\n            <fieldset className = \"popup__set\">\n            {props.children}\n            </fieldset>\n            <button type=\"submit\" className = \"popup__submit popup__submit-button popup__save-button\">{props.buttonText}</button>\n            </form>\n          </div>\n        </div>\n    )\n}\nexport default PopupWithForm;","import React from 'react';\nimport '../index.css';\nimport Header from '../components/Header';\nimport Main from './Main';\nimport Footer from '../components/Footer';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\n\n\n\nfunction App() {\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [imageOpened, setImageOpened] = React.useState(false);\n\n  function handleCardClick(item) {\n    setImageOpened(!imageOpened);\n    setSelectedCard(item)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(false);\n    setImageOpened(false);\n  }\n\n  return (\n    <div className=\"root\">\n      <div className=\"page\">\n        <Header />\n        <Main isAddPlacePopupOpen={handleAddPlaceClick} isEditProfilePopupOpen={handleEditProfileClick} isEditAvatarPopupOpen={handleEditAvatarClick} onCardClick={handleCardClick}/>\n        <Footer />\n\n        <PopupWithForm name = \"add\" title= \"Новое место\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} buttonText=\"Сохранить\">\n            <div className = \"popup__section\">\n                <input className = \"popup__input popup__item popup__item_card_name\" type = \"text\" id = \"name-place\" name = \"name\" placeholder=\"Название\" autoComplete=\"off\" minLength = \"2\" maxLength = \"30\" required/>\n                <span className = \"popup__input-type-error name-place-error\"></span>\n            </div>\n            <div className = \"popup__section\">\n                <input className = \"popup__input popup__item popup__item_card_link\" type = \"url\" id = \"link\" name = \"link\" placeholder=\"Cсылка на картинку\" autoComplete=\"off\" required/>\n                <span className = \"popup__input-type-error link-error\"></span>\n            </div>\n        </PopupWithForm>\n\n        <PopupWithForm name = \"edit\" title =\"Редактировать профиль\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} buttonText=\"Сохранить\">\n            <div className = \"popup__section\">\n                <input className = \"popup__input popup__item popup__item_type_name\" type = \"text\"  id = \"name\" name = \"name\" placeholder=\"Ваше имя\" autoComplete=\"off\" minLength = \"2\" maxLength = \"40\" required/>\n                <span className = \"popup__input-type-error name-error\"></span>\n            </div>\n            <div className = \"popup__section\">\n                <input className = \"popup__input popup__item popup__item_type_caption\" type = \"text\" id = \"caption\" name = \"caption\" placeholder=\"О себе\" autoComplete=\"off\" minLength = \"2\" maxLength = \"200\" required/>\n                <span className = \"popup__input-type-error caption-error\"></span>\n            </div>\n        </PopupWithForm>\n\n        <PopupWithForm name= \"update\" title =\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} buttonText=\"Сохранить\">\n            <div className = \"popup__section\">\n              <input className = \"popup__input popup__item popup__item_avatar_link\" type = \"url\" id = \"avatar\" name = \"avatar\" placeholder=\"Cсылка на картинку\" autoComplete=\"off\" required/>\n              <span className = \"popup__input-type-error avatar-error\"></span>\n            </div>\n        </PopupWithForm >\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} isOpen={imageOpened}/>\n \n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}